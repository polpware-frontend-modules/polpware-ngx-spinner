{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-spinner/lib/spinner/spinner-service-base.ts","ng://@polpware/ngx-spinner/lib/spinner/spinner-service.impl.ts","ng://@polpware/ngx-spinner/lib/spinner/spinner.interface.ts","ng://@polpware/ngx-spinner/lib/spinner/loading-indicator.decorator.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","SpinnerServiceBase","_referenceCounter","_showingTimer","_showingDelay","_dismissingTimer","spinnerState","setDelay","seconds","show","title","name","_this","logger","debug","clearTimeout","setTimeout","underlyingSpinner","hide","showAsync","args","_i","hideAsync","SpinnerServiceImpl","loggerProvider","_super","startToListenSpinner","_subr","getSpinner","subscribe","x","stopListener","unsubscribe","core","ɵɵinject","ngxSpinner","NgxSpinnerService","ngxLogger","LoggerProviderImpl","factory","ɵfac","NullSpinner","class_1","showLoadingIndicator","_a","spinner","hideLoadingIndicator","showLoadingIndicatorAsync","_b","hideLoadingIndicatorAsync","setLoadingIndicatorDelay"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAyC5E,SAASK,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAI/D,SAASO,EAAYjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOrC,OAAU2B,EACvJ,SAASM,EAAKK,GAAK,OAAO,SAAUC,GAAK,OACzC,SAAcC,GACV,GAAIhB,EAAG,MAAM,IAAIiB,UAAU,mCAC3B,KAAOb,GAAG,IACN,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARc,EAAG,GAASf,EAAU,OAAIe,EAAG,GAAKf,EAAS,SAAOC,EAAID,EAAU,SAAMC,EAAEgB,KAAKjB,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEgB,KAAKjB,EAAGe,EAAG,KAAKrB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGc,EAAK,CAAS,EAARA,EAAG,GAAQd,EAAEb,QACzB2B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGd,EAAIc,EAAI,MACxB,KAAK,EAAc,OAAXZ,EAAEC,QAAgB,CAAEhB,MAAO2B,EAAG,GAAIrB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIe,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKZ,EAAEI,IAAIW,MAAOf,EAAEG,KAAKY,MAAO,SACxC,QACI,KAAMjB,EAAIE,EAAEG,MAAML,EAAIA,EAAEkB,OAAS,GAAKlB,EAAEA,EAAEkB,OAAS,KAAkB,IAAVJ,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEZ,EAAI,EAAG,SACjG,GAAc,IAAVY,EAAG,MAAcd,GAAMc,EAAG,GAAKd,EAAE,IAAMc,EAAG,GAAKd,EAAE,IAAM,CAAEE,EAAEC,MAAQW,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYZ,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIc,EAAI,MAC7D,GAAId,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIa,KAAKL,GAAK,MACvDd,EAAE,IAAIE,EAAEI,IAAIW,MAChBf,EAAEG,KAAKY,MAAO,SAEtBH,EAAKjB,EAAKmB,KAAKrC,EAASuB,GAC1B,MAAOZ,GAAKwB,EAAK,CAAC,EAAGxB,GAAIS,EAAI,EAAI,QAAWD,EAAIE,EAAI,EACtD,GAAY,EAARc,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE3B,MAAO2B,EAAG,GAAKA,EAAG,QAAK,EAAQrB,MAAM,GArB9BL,CAAK,CAACwB,EAAGC,MA8CtD,SAASO,EAAOC,EAAGT,GACtB,IAAIU,EAAsB,mBAAXZ,QAAyBW,EAAEX,OAAOC,UACjD,IAAKW,EAAG,OAAOD,EACf,IAAmBE,EAAYjC,EAA3BkC,EAAIF,EAAEN,KAAKK,GAAOI,EAAK,GAC3B,IACI,WAAc,IAANb,GAAgBA,KAAM,MAAQW,EAAIC,EAAEnC,QAAQI,MAAMgC,EAAGN,KAAKI,EAAEpC,OAExE,MAAOuC,GAASpC,EAAI,CAAEoC,MAAOA,GACjC,QACQ,IACQH,IAAMA,EAAE9B,OAAS6B,EAAIE,EAAU,SAAIF,EAAEN,KAAKQ,GAE1D,QAAkB,GAAIlC,EAAG,MAAMA,EAAEoC,OAE7B,OAAOD,EAGJ,SAASE,IACZ,IAAK,IAAIF,EAAK,GAAID,EAAI,EAAGA,EAAII,UAAUV,OAAQM,IAC3CC,EAAKA,EAAGI,OAAOT,EAAOQ,UAAUJ,KACpC,OAAOC,EC1IX,iBAiBI,SAAAK,IAFQxD,KAAAyD,kBAAoB,EAGxBzD,KAAK0D,cAAgB,EACrB1D,KAAK2D,cAhBqB,IAiB1B3D,KAAK4D,iBAAmB,EAExB5D,KAAK6D,cAAe,EAoJ5B,OAjJWL,EAAAtD,UAAA4D,SAAP,SAAgBC,GACZ/D,KAAK2D,cAA0B,IAAVI,GAIlBP,EAAAtD,UAAA8D,KAAP,SAAYC,EAA+BC,GAA3C,IAAAC,EAAAnE,KASI,QATQ,IAAAiE,IAAAA,EAAA,oBAA+B,IAAAC,IAAAA,EA9BvB,WAgChBlE,KAAKoE,OAAOC,MAAM,6BAElBrE,KAAKyD,oBAELzD,KAAKoE,OAAOC,MAAM,6BAA+BrE,KAAKyD,mBAGlDzD,KAAK6D,aAeL,OAbA7D,KAAKoE,OAAOC,MAAM,8BAKdrE,KAAK4D,mBAEL5D,KAAKoE,OAAOC,MAAM,8BAElBC,aAAatE,KAAK4D,kBAClB5D,KAAK4D,iBAAmB,IAS5B5D,KAAK4D,mBAEL5D,KAAKoE,OAAOC,MAAM,8BAElBC,aAAatE,KAAK4D,kBAClB5D,KAAK4D,iBAAmB,GAKxB5D,KAAK0D,cAEL1D,KAAKoE,OAAOC,MAAM,8BAKtBrE,KAAKoE,OAAOC,MAAM,qBAGlBrE,KAAK0D,cAAgBa,YAAW,WAExBJ,EAAKT,gBAELS,EAAKT,cAAgB,EACrBS,EAAKK,kBAAkBR,KAAKE,GAC5BC,EAAKN,cAAe,KAGzB7D,KAAK2D,iBAILH,EAAAtD,UAAAuE,KAAP,SAAYP,GAAZ,IAAAC,EAAAnE,KAQI,QARQ,IAAAkE,IAAAA,EA7FQ,WA+FhBlE,KAAKoE,OAAOC,MAAM,6BAElBrE,KAAKyD,oBAELzD,KAAKoE,OAAOC,MAAM,6BAA+BrE,KAAKyD,qBAElDzD,KAAKyD,kBAAoB,GAM7B,OAAIzD,KAAK0D,eAEL1D,KAAKoE,OAAOC,MAAM,wBAElBC,aAAatE,KAAK0D,oBAClB1D,KAAK0D,cAAgB,IAQrB1D,KAAK4D,kBAEL5D,KAAKoE,OAAOC,MAAM,6BAElBC,aAAatE,KAAK4D,uBAClB5D,KAAK4D,iBAAmBW,YAAW,WAE3BJ,EAAKP,mBAELO,EAAKP,iBAAmB,EAExBO,EAAKK,kBAAkBC,KAAKP,MAjIlB,YA0IlBlE,KAAK6D,eAEL7D,KAAKoE,OAAOC,MAAM,2BAElBrE,KAAK4D,iBAAmBW,YAAW,WAE3BJ,EAAKP,mBAELO,EAAKP,iBAAmB,EAExBO,EAAKK,kBAAkBC,KAAKP,GAC5BC,EAAKN,cAAe,KArJV,QA2J1BL,EAAAtD,UAAAwE,UAAA,eAAA,IAAAP,EAAAnE,KAAU2E,EAAA,GAAAC,EAAA,EAAAA,EAAAtB,UAAAV,OAAAgC,IAAAD,EAAAC,GAAAtB,UAAAsB,GACN,OAAO,IAAInE,SAAQ,SAACC,EAASC,GACzBwD,EAAKH,KAAI3C,MAAT8C,EAAId,EAASsB,IACbjE,QAGR8C,EAAAtD,UAAA2E,UAAA,eAAA,IAAAV,EAAAnE,KAAU2E,EAAA,GAAAC,EAAA,EAAAA,EAAAtB,UAAAV,OAAAgC,IAAAD,EAAAC,GAAAtB,UAAAsB,GACN,OAAO,IAAInE,SAAQ,SAACC,EAASC,GACzBwD,EAAKM,KAAIpD,MAAT8C,EAAId,EAASsB,IACbjE,QAIZ8C,mBClKI,SAAAsB,EAA+BN,EAC3BO,GADJ,IAAAZ,EAEIa,EAAAtC,KAAA1C,OAAOA,YAFoBmE,EAAAK,kBAAAA,EAI3BL,EAAKC,OAASW,EAAeX,OAAO,iCARJtE,EAAAgF,EAAAE,GAY7BF,EAAA5E,UAAA+E,qBAAP,SAA4Bf,GAA5B,IAAAC,EAAAnE,UAA4B,IAAAkE,IAAAA,EAlBR,WAoBhBlE,KAAKkF,MAAQlF,KAAKwE,kBAAkBW,WAAWjB,GAAMkB,WAAU,SAAAC,GAC3DlB,EAAKN,aAAewB,EAAErB,SAIvBc,EAAA5E,UAAAoF,aAAP,SAAoBpB,QAAA,IAAAA,IAAAA,EAzBA,WA0BhBlE,KAAKkF,OAASlF,KAAKkF,MAAMK,gDApBpBT,GAAkBU,EAAAC,SAAAC,EAAAC,mBAAAH,EAAAC,SAAAG,EAAAC,0DAAlBf,EAAkBgB,QAAlBhB,EAAkBiB,UAASvC,oBCJxC,SAAAwC,KAcA,OAbIA,EAAA9F,UAAA8D,KAAA,aACAgC,EAAA9F,UAAAuE,KAAA,aACAuB,EAAA9F,UAAAwE,UAAA,WACI,OAAO,IAAIjE,SAAQ,SAACC,EAASC,GACzBD,QAGRsF,EAAA9F,UAAA2E,UAAA,WACI,OAAO,IAAIpE,SAAQ,SAACC,EAASC,GACzBD,QAGRsF,EAAA9F,UAAA4D,SAAA,SAASC,KACbiC,wGCb8E/F,GAC1E,OAAA,SAAA+E,GAAO,SAAAiB,mDAqBP,OArBqBnG,EAAAmG,EAAAjB,GAEViB,EAAA/F,UAAAgG,qBAAP,qBAA4BvB,EAAA,GAAAC,EAAA,EAAAA,EAAAtB,UAAAV,OAAAgC,IAAAD,EAAAC,GAAAtB,UAAAsB,IACxBuB,EAAAnG,KAAKoG,SAAQpC,KAAI3C,MAAA8E,EAAA9C,EAAIsB,KAGlBsB,EAAA/F,UAAAmG,qBAAP,qBAA4B1B,EAAA,GAAAC,EAAA,EAAAA,EAAAtB,UAAAV,OAAAgC,IAAAD,EAAAC,GAAAtB,UAAAsB,IACxBuB,EAAAnG,KAAKoG,SAAQ3B,KAAIpD,MAAA8E,EAAA9C,EAAIsB,KAGZsB,EAAA/F,UAAAoG,0BAAb,eAAuC,IAAA3B,EAAA,GAAAC,EAAA,EAAAA,EAAAtB,UAAAV,OAAAgC,IAAAD,EAAAC,GAAAtB,UAAAsB,mGAC5B,MAAA,CAAA,GAAMuB,EAAAnG,KAAKoG,SAAQ1B,UAASrD,MAAA8E,EAAA9C,EAAIsB,YAAvC,MAAA,CAAA,EAAO4B,EAAAzE,gBAGEmE,EAAA/F,UAAAsG,0BAAb,eAAuC,IAAA7B,EAAA,GAAAC,EAAA,EAAAA,EAAAtB,UAAAV,OAAAgC,IAAAD,EAAAC,GAAAtB,UAAAsB,mGAC5B,MAAA,CAAA,GAAMuB,EAAAnG,KAAKoG,SAAQvB,UAASxD,MAAA8E,EAAA9C,EAAIsB,YAAvC,MAAA,CAAA,EAAO4B,EAAAzE,gBAGJmE,EAAA/F,UAAAuG,yBAAP,SAAgC1C,GAC5B/D,KAAKoG,QAAQtC,SAASC,IAE9BkC,EArBA,CAAqBhG","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { INgxLogger } from '@polpware/ngx-logger';\nimport { ISpinnerService } from './spinner.interface';\n\nexport interface IUnderlyingSpinner {\n    show(name?: any);\n    hide(name?: any);\n}\n\nconst PRIMARY_SPINNER = 'primary';\n\nconst DismissingDelayPeroid = 300;\nconst DefaultShowingDelayPeroid = 500;\n\nexport abstract class SpinnerServiceBase implements ISpinnerService {\n\n    protected underlyingSpinner: IUnderlyingSpinner;\n    protected logger: INgxLogger;\n\n    private _showingTimer: any;\n    private _showingDelay: number;\n    private _dismissingTimer: any;\n\n    protected spinnerState: boolean;\n    private _referenceCounter = 0;\n\n    constructor() {\n        this._showingTimer = 0;\n        this._showingDelay = DefaultShowingDelayPeroid;\n        this._dismissingTimer = 0;\n\n        this.spinnerState = false;\n    }\n\n    public setDelay(seconds: number) {\n        this._showingDelay = seconds * 1000;\n    }\n\n    // Override\n    public show(title: string = 'Loading ...', name = PRIMARY_SPINNER) {\n\n        this.logger.debug('Spinner requested to show');\n\n        this._referenceCounter++;\n\n        this.logger.debug('Reference counter in show:' + this._referenceCounter);\n\n        // If there is one already, use it.\n        if (this.spinnerState) {\n\n            this.logger.debug('Existing spinner used');\n\n            // However, we need to cancel the dismiss timer.\n            // It is safe, because we expect that \"hide\" is to be called\n            // sometime later from this moment on.\n            if (this._dismissingTimer) {\n\n                this.logger.debug('Dismissing timer cleaned 1');\n\n                clearTimeout(this._dismissingTimer);\n                this._dismissingTimer = 0;\n            }\n\n            return;\n        }\n\n        // If we have already scheduled to dismiss the spinner,\n        // we just need to clear the scheduler.\n        // Please refer to the above for the reason.\n        if (this._dismissingTimer) {\n\n            this.logger.debug('Dismissing timer cleaned 2');\n\n            clearTimeout(this._dismissingTimer);\n            this._dismissingTimer = 0;\n        }\n\n        // If we have already scheduled to show the spinner, we just\n        // use this schedule. \n        if (this._showingTimer) {\n\n            this.logger.debug('Already scheduled to show');\n\n            return;\n        }\n\n        this.logger.debug('Schedule for show');\n\n        // Otherwise, schdule to show the spinner.\n        this._showingTimer = setTimeout(() => {\n\n            if (this._showingTimer) {\n                // Clean up the timer\n                this._showingTimer = 0;\n                this.underlyingSpinner.show(name);\n                this.spinnerState = true;\n            }\n\n        }, this._showingDelay);\n\n    }\n\n    public hide(name = PRIMARY_SPINNER) {\n\n        this.logger.debug('Spinner requested to hide');\n\n        this._referenceCounter--;\n\n        this.logger.debug('Reference counter in hide:' + this._referenceCounter);\n\n        if (this._referenceCounter > 0) {\n\n            return;\n        }\n\n        // If the spinner has not been scheduled.\n        if (this._showingTimer) {\n\n            this.logger.debug('Showed timer cleaned');\n\n            clearTimeout(this._showingTimer);\n            this._showingTimer = 0;\n\n            // Done\n            return;\n        }\n\n        // If have scheduled to dismiss the spinner,\n        // we better we schedule again.\n        if (this._dismissingTimer) {\n\n            this.logger.debug('Reschedule for dismissing');\n\n            clearTimeout(this._dismissingTimer);\n            this._dismissingTimer = setTimeout(() => {\n\n                if (this._dismissingTimer) {\n                    // Clean up the timer\n                    this._dismissingTimer = 0;\n                    // Dismiss the spinner \n                    this.underlyingSpinner.hide(name);\n                }\n            }, DismissingDelayPeroid);\n\n            return;\n        }\n\n        // Schedule to dismiss the spinner\n\n        if (this.spinnerState) {\n\n            this.logger.debug('Schedule for dismissing');\n\n            this._dismissingTimer = setTimeout(() => {\n\n                if (this._dismissingTimer) {\n\n                    this._dismissingTimer = 0;\n                    // Dismiss the spinner \n                    this.underlyingSpinner.hide(name);\n                    this.spinnerState = false;\n                }\n            }, DismissingDelayPeroid);\n        }\n    }\n\n    showAsync(...args: any[]) {\n        return new Promise((resolve, reject) => {\n            this.show(...args);\n            resolve();\n        });\n    }\n    hideAsync(...args: any[]) {\n        return new Promise((resolve, reject) => {\n            this.hide(...args);\n            resolve();\n        });\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { LoggerProviderImpl } from '@polpware/ngx-logger';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerServiceBase } from './spinner-service-base';\r\n\r\nconst PRIMARY_SPINNER = 'primary';\r\n\r\n/* Note that on purpose we do not turn this one into a singular service. \r\n * Therefore, we are able to create many such services for each component */\r\n\r\n@Injectable()\r\nexport class SpinnerServiceImpl extends SpinnerServiceBase {\r\n\r\n    private _subr: Subscription;\r\n\r\n    constructor(protected readonly underlyingSpinner: NgxSpinnerService,\r\n        loggerProvider: LoggerProviderImpl) {\r\n        super();\r\n\r\n        this.logger = loggerProvider.logger('polpware_ngx_spinner');\r\n    }\r\n\r\n    // Note that we do not need to stop it, as this is a service starting in the beginning.\r\n    public startToListenSpinner(name: string = PRIMARY_SPINNER) {\r\n        // Set up the listener\r\n        this._subr = this.underlyingSpinner.getSpinner(name).subscribe(x => {\r\n            this.spinnerState = x.show;\r\n        });\r\n    }\r\n\r\n    public stopListener(name: string = PRIMARY_SPINNER) {\r\n        this._subr && this._subr.unsubscribe();\r\n    }\r\n\r\n}\r\n\r\n","export interface ISpinnerService {\r\n    show(...args: any[]): void;\r\n    hide(...args: any[]): void;\r\n    showAsync(...args: any[]): Promise<any>;\r\n    hideAsync(...args: any[]): Promise<any>;\r\n    setDelay(seconds: number): void;\r\n}\r\n\r\nexport class NullSpinner implements ISpinnerService {\r\n    show() { }\r\n    hide() { }\r\n    showAsync() {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n    hideAsync() {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n    setDelay(seconds: number) { }\r\n}\r\n","import { ILoadingIndicator } from '../interfaces/indicators.interface';\r\nimport { ISpinnerService } from './spinner.interface';\r\n\r\ninterface IDecoratorPrerequisite {\r\n    spinner: ISpinnerService;\r\n}\r\n\r\ntype DecoratorPrequisiteClass = { new(...args: any[]): IDecoratorPrerequisite };\r\n\r\nexport function loadingIndicatorDecorator<T extends DecoratorPrequisiteClass>(constructor: T) {\r\n    return class extends constructor implements ILoadingIndicator {\r\n\r\n        public showLoadingIndicator(...args: any[]) {\r\n            this.spinner.show(...args);\r\n        }\r\n\r\n        public hideLoadingIndicator(...args: any[]) {\r\n            this.spinner.hide(...args);\r\n        }\r\n\r\n        public async showLoadingIndicatorAsync(...args: any[]) {\r\n            return await this.spinner.showAsync(...args);\r\n        }\r\n\r\n        public async hideLoadingIndicatorAsync(...args: any[]) {\r\n            return await this.spinner.hideAsync(...args);\r\n        }\r\n\r\n        public setLoadingIndicatorDelay(seconds: number) {\r\n            this.spinner.setDelay(seconds);\r\n        }\r\n    };\r\n}\r\n"]}