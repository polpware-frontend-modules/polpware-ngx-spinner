{"version":3,"file":"polpware-ngx-spinner.js","sources":["ng://@polpware/ngx-spinner/lib/spinner/spinner-service.impl.ts","ng://@polpware/ngx-spinner/lib/spinner/loading-indicator.decorator.ts","ng://@polpware/ngx-spinner/lib/spinner/spinner.interface.ts","ng://@polpware/ngx-spinner/public_api.ts","ng://@polpware/ngx-spinner/polpware-ngx-spinner.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { startWith } from 'rxjs/operators';\r\n\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\nimport {\r\n    ISpinnerService\r\n} from './spinner.interface';\r\n\r\nconst PRIMARY_SPINNER = 'primary';\r\n\r\nconst DismissingDelayPeroid = 300;\r\nconst DefaultShowingDelayPeroid = 500;\r\n\r\n/* Note that on purpose we do not turn this one into a singular service. \r\n * Therefore, we are able to create many such services for each component */\r\n\r\n@Injectable()\r\nexport class SpinnerServiceImpl implements ISpinnerService {\r\n\r\n    private _showingTimer: any;\r\n    private _showingDelay: number;\r\n    private _dismissingTimer: any;\r\n\r\n    private _spinnerState: boolean;\r\n    private _referenceCounter = 0;\r\n\r\n    private _subr: Subscription;\r\n\r\n    constructor(private readonly _underlyingSpinner: NgxSpinnerService) {\r\n        this._showingTimer = 0;\r\n        this._showingDelay = DefaultShowingDelayPeroid;\r\n        this._dismissingTimer = 0;\r\n\r\n        this._spinnerState = false;\r\n    }\r\n\r\n    // Note that we do not need to stop it, as this is a service starting in the beginning.\r\n    public startToListenSpinner(name: string = PRIMARY_SPINNER) {\r\n        // Set up the listener\r\n        this._subr = this._underlyingSpinner.getSpinner(name).subscribe(x => {\r\n            this._spinnerState = x.show;\r\n        });\r\n    }\r\n\r\n    public stopListener(name: string = PRIMARY_SPINNER) {\r\n        this._subr && this._subr.unsubscribe();\r\n    }\r\n\r\n    public setDelay(seconds: number) {\r\n        this._showingDelay = seconds * 1000;\r\n    }\r\n\r\n    // Override\r\n    public show(title: string = 'Loading ...', name = PRIMARY_SPINNER) {\r\n\r\n        console.log('Asked to show spinner...');\r\n\r\n        this._referenceCounter++;\r\n\r\n        // If there is one already, use it.\r\n        if (this._spinnerState) {\r\n\r\n            console.log('show --- one has been scheduled');\r\n\r\n            // However, we need to cancel the dismiss timer.\r\n            // It is safe, because we expect that \"hide\" is to be called\r\n            // sometime later from this moment on.\r\n            if (this._dismissingTimer) {\r\n\r\n                console.log('show --- cleaning out dismisming timer');\r\n\r\n                clearTimeout(this._dismissingTimer);\r\n                this._dismissingTimer = 0;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // If we have already scheduled to dismiss the spinner,\r\n        // we just need to clear the scheduler.\r\n        // Please refer to the above for the reason.\r\n        if (this._dismissingTimer) {\r\n\r\n            console.log('show --- cleaning out dismisming timer (2)');\r\n\r\n            clearTimeout(this._dismissingTimer);\r\n            this._dismissingTimer = 0;\r\n        }\r\n\r\n        // If we have already scheduled to show the spinner, we just\r\n        // use this schedule. \r\n        if (this._showingTimer) {\r\n\r\n            console.log('show --- already scheduled one');\r\n\r\n            return;\r\n        }\r\n\r\n        // Otherwise, schdule to show the spinner.\r\n        this._showingTimer = setTimeout(() => {\r\n\r\n            console.log('show --- run');\r\n\r\n            if (this._showingTimer) {\r\n                // Clean up the timer\r\n                this._showingTimer = 0;\r\n                this._underlyingSpinner.show(name);\r\n            }\r\n\r\n        }, this._showingDelay);\r\n\r\n    }\r\n\r\n    public hide(name = PRIMARY_SPINNER) {\r\n\r\n        this._referenceCounter--;\r\n\r\n        if (this._referenceCounter > 0) {\r\n\r\n            console.log('hide --- reference counter still greater than 0');\r\n\r\n            return;\r\n        }\r\n\r\n        // If the spinner has not been scheduled.\r\n        if (this._showingTimer) {\r\n\r\n            console.log('hide --- remove the show scheduler');\r\n\r\n            clearTimeout(this._showingTimer);\r\n            this._showingTimer = 0;\r\n\r\n            // Done\r\n            return;\r\n        }\r\n\r\n        // If have scheduled to dismiss the spinner,\r\n        // we better we schedule again.\r\n        if (this._dismissingTimer) {\r\n\r\n            console.log('hide --- already shceduled');\r\n\r\n            clearTimeout(this._dismissingTimer);\r\n            this._dismissingTimer = setTimeout(() => {\r\n\r\n                console.log('hide -run (1)');\r\n\r\n                if (this._dismissingTimer) {\r\n                    console.log('live');\r\n                    // Clean up the timer\r\n                    this._dismissingTimer = 0;\r\n                    // Dismiss the spinner \r\n                    this._underlyingSpinner.hide(name);\r\n                }\r\n            }, DismissingDelayPeroid);\r\n\r\n            return;\r\n        }\r\n\r\n        // Schedule to dismiss the spinner\r\n\r\n        if (this._spinnerState) {\r\n\r\n            console.log('hide --- schedule');\r\n\r\n            this._dismissingTimer = setTimeout(() => {\r\n\r\n                console.log('hide -run (2)');\r\n\r\n                if (this._dismissingTimer) {\r\n                    console.log('live');\r\n\r\n                    this._dismissingTimer = 0;\r\n                    // Dismiss the spinner \r\n                    this._underlyingSpinner.hide(name);\r\n                }\r\n            }, DismissingDelayPeroid);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ILoadingIndicator } from '../interfaces/indicators.interface';\r\nimport { ISpinnerService } from './spinner.interface';\r\n\r\ninterface IDecoratorPrerequisite {\r\n    spinner: ISpinnerService;\r\n}\r\n\r\ntype DecoratorPrequisiteClass = { new(...args: any[]): IDecoratorPrerequisite };\r\n\r\nexport function loadingIndicatorDecorator<T extends DecoratorPrequisiteClass>(constructor: T) {\r\n    return class extends constructor implements ILoadingIndicator {\r\n\r\n        public showLoadingIndicator(...args: any[]) {\r\n            this.spinner.show(...args);\r\n        }\r\n\r\n        public hideLoadingIndicator() {\r\n            this.spinner.hide();\r\n        }\r\n\r\n        public setLoadingIndicatorDelay(seconds: number) {\r\n            this.spinner.setDelay(seconds);\r\n        }\r\n    };\r\n}\r\n","export interface ISpinnerService {\r\n    show(...args: any[]);\r\n    hide(...args: any[]);\r\n    setDelay(seconds: number);\r\n}\r\n\r\nexport class NullSpinner implements ISpinnerService {\r\n    show() { }\r\n    hide() { }\r\n    setDelay(seconds: number) { }\r\n}\r\n","/*\n * Public API Surface of ngx-spinner\n */\n\nexport * from \"./lib/spinner/spinner-service.impl\";\nexport * from \"./lib/spinner/loading-indicator.decorator\";\nexport * from \"./lib/spinner/spinner.interface\";\nexport * from \"./lib/interfaces/indicators.interface\";\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}